package kr.or.bit;

/*
접근자(한정자, 수정자) : modifier
public : (공유 : 폴더(package) 구분 없이 모든 자원을 공요)
private : (개인 : 클래스 내부에서는 공유, 참조변수(객체) 사용불가 한 자원)
             **객체지향 특징 : 캡슐화, 은닉화**
1. 클래스 내부에서 private int age;
1.1 private : 직적할당을 막고 간접할당을 통해서 자원을 보호
1.2 설계자의 의도 (원하는 값만 처리) age 변수에 1~200 정수만 허용 
    > 별도의 함수로
1.3 캡슐화된 자원의 간접할당을 처리하는 특수한 함수 (setter, getter)
    private member field 에 read, write를 할 수 있는 함수
    
1.4 private int age;



*/

public class Car {
	private int window;
}
